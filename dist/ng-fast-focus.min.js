!function(){"use strict";angular.module("ngFastFocus",["ng"])}(),function(){"use strict";function fastFocusFocuser(){function createFocusGroup(){var id=currentFocusGroupId;return++currentFocusGroupId,focusGroups[id]={},id.toString()}function destroyFocusGroup(groupId){delete focusGroups[groupId]}function changeFocusFor(groupId,modelValue){var focusGroup=focusGroups[groupId];focusGroup&&focusGroup.hasOwnProperty(modelValue)&&focusGroup[modelValue][0].focus()}function setFocusOn(groupId,modelValue,$element){if(!focusGroups[groupId])throw new Error("Unexpected state: no group '"+groupId+"'");focusGroups[groupId][modelValue]=$element}function getActiveFocusGroups(){return Object.keys(focusGroups)}function getFocusGroup(id){return angular.copy(focusGroups[id])}var focusGroups={},currentFocusGroupId=1;return{createFocusGroup:createFocusGroup,destroyFocusGroup:destroyFocusGroup,changeFocusFor:changeFocusFor,setFocusOn:setFocusOn,getActiveFocusGroups:getActiveFocusGroups,getFocusGroup:getFocusGroup}}angular.module("ngFastFocus").factory("fastFocusFocuser",fastFocusFocuser),fastFocusFocuser.$inject=[]}(),function(){"use strict";function focusModel(fastFocusFocuser){return{restrict:"A",link:function($scope,$element,$attr){var focusExpr=$attr.focusModel;if(!focusExpr)throw new Error("focus-model directive requires namesake attribute to be set to expression to watch");var focusGroupId=fastFocusFocuser.createFocusGroup();$scope._focusGroupId=focusGroupId,$scope.$watch(focusExpr,function(newValue){fastFocusFocuser.changeFocusFor(focusGroupId,newValue)}),$scope.$on("$destroy",function(){fastFocusFocuser.destroyFocusGroup(focusGroupId)})}}}angular.module("ngFastFocus").directive("focusModel",focusModel),focusModel.$inject=["fastFocusFocuser"]}(),function(){"use strict";function focusOn(fastFocusFocuser){return{restrict:"A",link:function($scope,$element,$attr){function findCurrentFocusGroup(){var currentScope=$scope;do{if(currentScope._focusGroupId)return currentScope._focusGroupId;currentScope=currentScope.$parent}while(currentScope);return null}var focusOnExpr=$attr.focusOn;if(!focusOnExpr)throw new Error("focus-on directive requires namesake attribute to be set to expression");var currentFocusGroupId=findCurrentFocusGroup();if(!currentFocusGroupId)throw new Error("cannot find focus group in current or parent scopes");var focusOnValue=$scope.$eval(focusOnExpr);if(void 0===focusOnValue||null===focusOnValue)throw new Error("invalid focus-on expression or value '"+focusOnExpr+"'");fastFocusFocuser.setFocusOn(currentFocusGroupId,focusOnValue,$element)}}}angular.module("ngFastFocus").directive("focusOn",focusOn),focusOn.$inject=["fastFocusFocuser"]}();